{"ast":null,"code":"var _jsxFileName = \"/Users/rishi/Downloads/integrations_technical_assessment/frontend/src/data-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Typography, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'Notion': 'notion',\n  'Airtable': 'airtable',\n  'HubSpot': 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const endpoint = endpointMapping[integrationType];\n  const handleLoad = async () => {\n    try {\n      setIsLoading(true);\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      setLoadedData(data);\n      setIsLoading(false);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsLoading(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [loadedData.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Loaded Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), loadedData.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1,\n            p: 2,\n            border: '1px solid #ddd',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 61\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 61\n            }, this), \" \", item.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 61\n            }, this), \" \", item.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Created At:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 61\n            }, this), \" \", new Date(item.creation_time).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last Modified:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 61\n            }, this), \" \", new Date(item.last_modified_time).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this) : 'Load Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLoadedData([]),\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(DataForm, \"OmXhD0aRxauNOUyg9sCGyZnpxsk=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","Typography","Button","CircularProgress","axios","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","isLoading","setIsLoading","endpoint","handleLoad","formData","FormData","append","JSON","stringify","response","post","data","e","_e$response","_e$response$data","alert","detail","display","justifyContent","alignItems","flexDirection","width","children","length","sx","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","p","border","borderRadius","name","id","type","Date","creation_time","toLocaleString","last_modified_time","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/rishi/Downloads/integrations_technical_assessment/frontend/src/data-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    Typography,\n    Button,\n    CircularProgress,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst endpointMapping = {\n    'Notion': 'notion',\n    'Airtable': 'airtable',\n    'HubSpot': 'hubspot',\n};\n\nexport const DataForm = ({ integrationType, credentials }) => {\n    const [loadedData, setLoadedData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const endpoint = endpointMapping[integrationType];\n\n    const handleLoad = async () => {\n        try {\n            setIsLoading(true);\n            const formData = new FormData();\n            formData.append('credentials', JSON.stringify(credentials));\n            const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n            const data = response.data;\n            setLoadedData(data);\n            setIsLoading(false);\n        } catch (e) {\n            setIsLoading(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    return (\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n            <Box display='flex' flexDirection='column' width='100%'>\n            {loadedData.length > 0 && (\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"h6\">Loaded Data:</Typography>\n                        {loadedData.map((item, index) => (\n                            <Box key={index} sx={{ mt: 1, p: 2, border: '1px solid #ddd', borderRadius: '4px' }}>\n                                <Typography variant=\"body1\"><strong>Name:</strong> {item.name}</Typography>\n                                <Typography variant=\"body2\"><strong>ID:</strong> {item.id}</Typography>\n                                <Typography variant=\"body2\"><strong>Type:</strong> {item.type}</Typography>\n                                <Typography variant=\"body2\"><strong>Created At:</strong> {new Date(item.creation_time).toLocaleString()}</Typography>\n                                <Typography variant=\"body2\"><strong>Last Modified:</strong> {new Date(item.last_modified_time).toLocaleString()}</Typography>\n                            </Box>\n                        ))}\n                    </Box>\n                )}\n                <Button\n                    onClick={handleLoad}\n                    sx={{mt: 2}}\n                    variant='contained'\n                    disabled={isLoading}\n                >\n                    {isLoading ? <CircularProgress size={20} /> : 'Load Data'}\n                </Button>\n                <Button\n                    onClick={() => setLoadedData([])}\n                    sx={{mt: 1}}\n                    variant='contained'\n                >\n                    Clear Data\n                </Button>\n\n                \n            </Box>\n        </Box>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}